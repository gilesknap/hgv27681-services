{{- if not .Values.hostNetwork }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}
    spec:
      # enable the k8s service account so we can query for IOCs in the namespace
      serviceAccountName: default-full-access-mounted
      # if overrideConfig is set, mount the config map over the default
      # config files supplied inside the container image
      {{- if .Values.overrideConfig }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
      {{- end }}
      containers:
        - name: {{ .Release.Name }}-ca-gateway
          command:
           - bash
          args:
           - "/config/start-ca.sh"
          env: &env_gateways
            - name: EPICS_CA_AUTO_ADDR_LIST
              value: {{ ternary "YES" "NO" .Values.hostNetwork | quote}}
            - name: EPICS_PVA_AUTO_ADDR_LIST
              value: {{ ternary "YES" "NO" .Values.hostNetwork | quote}}
            - name: EPICS_CA_ADDR_LIST
              value: {{ .Values.caAddrList  | quote}}
            - name: EPICS_PVA_ADDR_LIST
              value: {{ .Values.pvaAddrList  | quote}}
            - name: CA_SERVER_PORT
              value:  {{ .Values.caServerPort  | quote}}
            - name: PVA_SERVER_PORT
              value:  {{ .Values.pvaServerPort | quote }}
            - name: CA_DEBUG
              value: {{ .Values.caDebug | quote }}
            - name: PVA_DEBUG
              value: {{ .Values.pvaDebug | quote }}
          image: {{ .Values.image }}
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 800m
              memory: 1500Mi
            requests:
              cpu: 200m
              memory: 500Mi
          stdin: true
          tty: true
          {{- if .Values.overrideConfig }}
          volumeMounts:
          - name: config-volume
            mountPath: /config
          {{- end }}

        - name: "{{ .Release.Name }}-pva-gateway"
          command:
           - bash
          args:
           - "/config/start-pva.sh"
          env: *env_gateways
          image: {{ .Values.image }}
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 800m
              memory: 1500Mi
            requests:
              cpu: 200m
              memory: 400Mi
          stdin: true
          tty: true
          {{- if .Values.overrideConfig }}
          volumeMounts:
          - name: config-volume
            mountPath: /config
          {{- end }}

      {{- if .Values.nodeName }}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork | default "false" }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 1

{{- end}}